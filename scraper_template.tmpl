# coding=utf-8

from sandcrawler.scraper import ScraperBase{extra_imports}

class {module_name}({module_bases}):
    BASE_URL = '{base_url}'
    OTHER_URLS = []
    SCRAPER_TYPES = [ {scraper_types}, ]
    LANGUAGE = '{language}'
    MEDIA_TYPES = [ {media_types}, ]

    URL_TYPES = [ScraperBase.URL_TYPE_SEARCH, ScraperBase.URL_TYPE_LISTING, ]

    def setup(self, *args, **kwargs):
        raise NotImplemented('TODO - Remove me to activate')

    def _fetch_search_url(self, search_term, media_type):
        return {search_url}

    def _fetch_no_results_text(self):
        return u'{no_results_text}'

    def _fetch_next_button(self, soup):
        next_button = soup.select_one('{fetch_next_button}')
        if next_button:
            return next_button.href
        return None

    def _parse_search_result_page(self, soup):
        for result in soup.select('{search_result_identifier}'):
            link = result.select_one('a')
            self.submit_search_result(
                link_url=link.href,
                link_title=link.text,
                image=self.util.find_image_src_or_none(result, 'img'),
            )
    def _parse_parse_page(self, soup):
        index_page_title = self.util.get_page_title(soup)
        series_season = series_episode = None
        title = soup.select_one('h1')
        if title and title.text:
            series_season, series_episode = self.util.extract_season_episode(title.text)
        for link in soup.select('{parse_result_identifier}'):
            self.submit_parse_result(
                index_page_title=index_page_title,
                link_url=link.href,
                link_title=link.text,
                series_season=series_season,
                series_episode=series_episode,
            )
